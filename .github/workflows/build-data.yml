name: Build and Load data demo

on:
  workflow_dispatch:
  push:
    branches:
      - main
  schedule:
    - cron:  '0 0 * * *'

jobs:
  scheduled:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      name: Check out repo
    - name: Set up Python
      uses: actions/setup-python@v1
      with:
        python-version: "3.9"
    - uses: actions/cache@v1
      name: Configure pip caching
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/setup.py') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install sqlite-utils>=3.1
        sqlite-utils --version
        pip install -e .
        pip install datasette
        pip install bs4
    - name: Create auth.json
      env:
        GITHUB_ACCESS_TOKEN: ${{ secrets.ACCESS_TOKEN_WHO }}
      run: |
        echo "{\"github_personal_token\": \"$GITHUB_ACCESS_TOKEN\"}" > auth.json
    - name: Fetch the repos
      run: |-
        github-to-sqlite repos github.db WorldHealthOrganization
        sqlite-utils tables --counts github.db
    - name: Fetch releases, commits, issues, contributors
      run: |-
        sqlite-utils github.db "select full_name from repos where owner = 15090726 union select 'WorldHealthOrganization/app' as full_name union select 'WorldHealthOrganization/open-source-communication-channel' as full_name" \
          --csv --no-headers | while read repo;
            do echo $repo;
                github-to-sqlite releases \
                    github.db $(echo $repo | tr -d '\r');
                sleep 1;echo releases;
                github-to-sqlite commits \
                    github.db $(echo $repo | tr -d '\r');
                sleep 1; echo commits;
                github-to-sqlite tags \
                    github.db $(echo $repo | tr -d '\r');
                sleep 1; echo tags; 
                github-to-sqlite contributors \
                    github.db $(echo $repo | tr -d '\r');
                sleep 1; echo repo; 
                github-to-sqlite issues \
                    github.db $(echo $repo | tr -d '\r');
                sleep 1; echo issues;
                github-to-sqlite pull-requests \
                    github.db $(echo $repo | tr -d '\r');
                sleep 1; echo pr;
                github-to-sqlite stargazers \
                    github.db $(echo $repo | tr -d '\r');
                sleep 1; echo starg; 
            done;
        # Scrape dependents
        github-to-sqlite scrape-dependents github.db WorldHealthOrganization/app -v
        sqlite-utils tables --counts github.db
        # Delete email addresses from raw_authors
        # sqlite-utils github.db "update raw_authors set email = ''"
        # Fetch emojis
        # echo emojies
        # github-to-sqlite emojis github.db --fetch
        # Rebuild FTS tables
        echo rebuilt-fts
        sqlite-utils rebuild-fts github.db
        # Populate _analyze_tables_ table
        #echo analyze;
        #sqlite-utils analyze-tables github.db --save
        echo uploading
    - uses: actions/upload-artifact@v3
      with:
        path: github.db
